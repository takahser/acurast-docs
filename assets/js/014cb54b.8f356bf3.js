"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[24],{3905:(t,e,n)=>{n.d(e,{Zo:()=>c,kt:()=>d});var r=n(7294);function i(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function a(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function o(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?a(Object(n),!0).forEach((function(e){i(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function s(t,e){if(null==t)return{};var n,r,i=function(t,e){if(null==t)return{};var n,r,i={},a=Object.keys(t);for(r=0;r<a.length;r++)n=a[r],e.indexOf(n)>=0||(i[n]=t[n]);return i}(t,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);for(r=0;r<a.length;r++)n=a[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(i[n]=t[n])}return i}var u=r.createContext({}),l=function(t){var e=r.useContext(u),n=e;return t&&(n="function"==typeof t?t(e):o(o({},e),t)),n},c=function(t){var e=l(t.components);return r.createElement(u.Provider,{value:e},t.children)},p={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},m=r.forwardRef((function(t,e){var n=t.components,i=t.mdxType,a=t.originalType,u=t.parentName,c=s(t,["components","mdxType","originalType","parentName"]),m=l(n),d=i,b=m["".concat(u,".").concat(d)]||m[d]||p[d]||a;return n?r.createElement(b,o(o({ref:e},c),{},{components:n})):r.createElement(b,o({ref:e},c))}));function d(t,e){var n=arguments,i=e&&e.mdxType;if("string"==typeof t||i){var a=n.length,o=new Array(a);o[0]=m;var s={};for(var u in e)hasOwnProperty.call(e,u)&&(s[u]=e[u]);s.originalType=t,s.mdxType="string"==typeof t?t:i,o[1]=s;for(var l=2;l<a;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3689:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>u,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var r=n(7462),i=(n(7294),n(3905));const a={title:"Introduction",slug:"/integrations/introduction"},o="Integrations",s={unversionedId:"integrations/introduction",id:"integrations/introduction",title:"Introduction",description:"Introduction",source:"@site/docs/integrations/introduction.mdx",sourceDirName:"integrations",slug:"/integrations/introduction",permalink:"/integrations/introduction",draft:!1,editUrl:"https://github.com/acurast/acurast-docs/docs/integrations/introduction.mdx",tags:[],version:"current",frontMatter:{title:"Introduction",slug:"/integrations/introduction"},sidebar:"docs",previous:{title:"Acurast Transmitters",permalink:"/acurast-transmitters"},next:{title:"Substrate",permalink:"/integrations/substrate"}},u={},l=[{value:"Introduction",id:"introduction",level:3},{value:"Substrate",id:"substrate",level:3},{value:"Substrate with EVM",id:"substrate-with-evm",level:3},{value:"Substrate with WASM",id:"substrate-with-wasm",level:3},{value:"Tezos",id:"tezos",level:3},{value:"Upcoming Integrations",id:"upcoming-integrations",level:3}],c={toc:l};function p(t){let{components:e,...n}=t;return(0,i.kt)("wrapper",(0,r.Z)({},c,n,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"integrations"},"Integrations"),(0,i.kt)("h3",{id:"introduction"},"Introduction"),(0,i.kt)("p",null,"Acurast is built with interoperability at its core, meaning that Acurast is flexible in terms of the destination and can support various blockchain ecosystems if the requirements are met."),(0,i.kt)("h3",{id:"substrate"},"Substrate"),(0,i.kt)("p",null,"Acurast supports with its Pallet the integration on a substrate level, enabling substrate based chains to receive the output from Acurast Jobs."),(0,i.kt)("p",null,"Learn about an integration with ",(0,i.kt)("a",{parentName:"p",href:"/integrations/substrate/"},"Substrate")),(0,i.kt)("h3",{id:"substrate-with-evm"},"Substrate with EVM"),(0,i.kt)("p",null,"Acurast supports with its integration of the Pallet the routing to EVM based environment such as Frontier, making the output consumable on a Substrate chain with an EVM environment."),(0,i.kt)("p",null,"Learn about an integration with ",(0,i.kt)("a",{parentName:"p",href:"/integrations/substrate-evm/"},"Substrate with EVM")),(0,i.kt)("h3",{id:"substrate-with-wasm"},"Substrate with WASM"),(0,i.kt)("p",null,"Acurast supports with its integration of the Pallet the routing to WASM based environment, making the output consumable on a Substrate chain with a WASM environment."),(0,i.kt)("p",null,"Learn about an integration with ",(0,i.kt)("a",{parentName:"p",href:"/integrations/substrate-wasm/"},"Substrate with WASM")),(0,i.kt)("h3",{id:"tezos"},"Tezos"),(0,i.kt)("p",null,"Acurast supports Tezos smart contracts as the destination of outputs from Acurast Transmitters directly as the required secp256r1 is supported natively by Tezos."),(0,i.kt)("p",null,"Learn about Acurast on ",(0,i.kt)("a",{parentName:"p",href:"/integrations/tezos/"},"Tezos")),(0,i.kt)("h3",{id:"upcoming-integrations"},"Upcoming Integrations"),(0,i.kt)("p",null,"More details will be available soon about the upcoming integrations, these include the following ecosystems:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Algorand"),(0,i.kt)("li",{parentName:"ul"},"Cosmos"),(0,i.kt)("li",{parentName:"ul"},"Kusama"),(0,i.kt)("li",{parentName:"ul"},"NEAR"),(0,i.kt)("li",{parentName:"ul"},"Polkadot"),(0,i.kt)("li",{parentName:"ul"},"Tezos")))}p.isMDXComponent=!0}}]);