(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[676],{3905:(e,n,t)=>{"use strict";t.d(n,{Zo:()=>p,kt:()=>m});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=r.createContext({}),c=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},p=function(e){var n=c(e.components);return r.createElement(l.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=c(t),m=o,E=d["".concat(l,".").concat(m)]||d[m]||u[m]||a;return t?r.createElement(E,s(s({ref:n},p),{},{components:t})):r.createElement(E,s({ref:n},p))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,s=new Array(a);s[0]=d;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i.mdxType="string"==typeof e?e:o,s[1]=i;for(var c=2;c<a;c++)s[c]=t[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},7477:(e,n,t)=>{"use strict";t.d(n,{Z:()=>l});var r=t(7462),o=t(7294),a=t(2949);const s=[],i=(0,o.lazy)((()=>Promise.all([t.e(532),t.e(302)]).then(t.bind(t,2302))));const l=function(e){let n;const{colorMode:t}=(0,a.I)();return o.createElement(o.Suspense,{fallback:o.createElement("div",null,"Loading")},o.createElement(i,(0,r.Z)({},e,{editorWillMount:function(t){n=t,t.editor.defineTheme("vs-dark",{base:"vs-dark",inherit:!0,rules:[{background:"121212"}],colors:{"editor.background":"#121212"}}),t.languages.typescript.typescriptDefaults.setCompilerOptions({target:t.languages.typescript.ScriptTarget.ES2017,allowNonTsExtensions:!0,moduleResolution:t.languages.typescript.ModuleResolutionKind.NodeJs,module:t.languages.typescript.ModuleKind.ESNext,typeRoots:["node_modules/@types"]}),s.forEach((e=>{const n="file:///node_modules/"+e.name;t.languages.typescript.typescriptDefaults.addExtraLib(e.dts,n)})),e.editorWillMount&&e.editorWillMount(t)},editorDidMount:function(t){t.setModel(n.editor.createModel(e.value,"typescript",n.Uri.parse("file:///main-"+Math.random()+".ts")))},theme:"dark"===t?"vs-dark":"vs-light"})))}},920:(e,n,t)=>{"use strict";let r;t.d(n,{T:()=>r}),function(e){e[e.INIT=0]="INIT",e[e.STARTED=1]="STARTED",e[e.ENDED=2]="ENDED"}(r||(r={}))},1509:(e,n,t)=>{"use strict";t.d(n,{N:()=>r});const r='export const fulfill = (payload: any) => {\n  console.log("fulfill", payload);\n  return payload;\n};\n\nexport const pack = (payload: any) => {\n  console.log("pack");\n  return payload;\n};\n\nexport const sign = (payload: any) => {\n  console.log("sign");\n  return payload;\n};\n\nexport const httpGET = async (\n  url: string,\n  headers: any,\n  successCallback: (response: any, certificate?: any, payload?: any) => string,\n  errorCallback: (error: Error) => void\n) => {\n  console.log("httpGET");\n  const response = await fetch(\n    "https://cors-proxy.airgap.prod.gke.papers.tech/proxy-with-fingerprint?url=" +\n      url,\n    {\n      method: "GET",\n      mode: "cors",\n      headers: headers,\n    }\n  );\n\n  // TODO: Handle non-json responses\n  const jsonPromise = response.json();\n  jsonPromise.then((res) => {\n    console.log("response", res);\n    successCallback(\n      JSON.stringify(res),\n      response.headers.get("X-Fingerprint256")\n    );\n  });\n\n  return jsonPromise;\n};\n\nexport const httpPOST = async (\n  url: string,\n  body: any,\n  headers: any,\n  successCallback: (payload: any, certificate?: any, response?: any) => string,\n  errorCallback: (error: Error) => void\n) => {\n  console.log("httpPOST");\n  const response = await fetch(url, {\n    method: "POST",\n    mode: "cors",\n    headers: headers,\n    body: body,\n  });\n\n  const text = response.text();\n\n  text.then((res) => {\n    successCallback(res);\n  });\n\n  return text;\n};\n\nexport const attest = (\n  nonce: string,\n  successCallback: (payload: any, certificate: any, response: any) => string,\n  errorCallback: (error: Error) => void\n) => {\n  console.log("attest");\n};\n\nexport const ownAddress = () => {\n  return "tz1xxxxxxx";\n};\n\nexport const generateSecureRandomHex = (): string => {\n  var buf = new Uint8Array(4);\n  window.crypto.getRandomValues(buf);\n  return Array.from(buf)\n    .map((x) => x.toString(16))\n    .join("");\n};\n'},6420:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{M:()=>runCoinlibCode,s:()=>copyShareUrl});var typescript__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(5423),typescript__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(typescript__WEBPACK_IMPORTED_MODULE_0__),_predefined_methods_string__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(1509);function replaceAll(e,n,t){return e.split(n).join(t)}const removeImports=e=>{const n=e.split("\n");let t=!0;return n.map((e=>{e.trim().startsWith("import")&&(t=!1);const n=t?e:void 0;return e.indexOf("@airgap/coinlib-core")>=0&&(t=!0),n})).filter((e=>!!e)).join("\n")},runCoinlibCode=(rawCode,setOutput)=>{let code=rawCode;const coinlib={};let output="";const appendOutput=e=>{output+="\n"+e,setOutput(output.trim())},myLog=function(){for(var e=arguments.length,n=new Array(e),t=0;t<e;t++)n[t]=arguments[t];console.log("CODE_RUNNER:",...n),appendOutput(n.map((e=>"object"==typeof e?JSON.stringify(e,null,2):e)).join(" "))};let runnable;return code=replaceAll(code,"console.log(","progress("),code=removeImports(code),code=typescript__WEBPACK_IMPORTED_MODULE_0__.transpile("({\n      run: async (coinlib: any, progress: any): string => {\n        Object.keys(coinlib).forEach(key => {\n          window[key] = coinlib[key]\n        })\n        return (async () => {\n          "+_predefined_methods_string__WEBPACK_IMPORTED_MODULE_1__.N+";\n          "+code+";\n          if (typeof result !== 'undefined') {\n            return result\n          }\n        })()\n      })"),new Promise((resolve=>{try{runnable=eval(code),runnable.run(coinlib,myLog).then((e=>{e&&appendOutput("Returned:\n"+JSON.stringify(e,null,2)),resolve(e)})).catch((e=>{console.warn(e),appendOutput(JSON.stringify(e,null,2)),resolve(e)}))}catch(e){appendOutput(e),console.error(e),resolve(e)}}))},copyShareUrl=e=>{const n="https://"+window.location.host+"/playground?code="+btoa(e);navigator.clipboard.writeText(n).catch((e=>console.error("Failed to copy to url!",e)))}},6597:(e,n,t)=>{"use strict";t.r(n),t.d(n,{assets:()=>C,contentTitle:()=>h,default:()=>D,frontMatter:()=>g,metadata:()=>y,toc:()=>b});var r=t(7462),o=t(7294),a=t(3905);const s="browserWindow_my1Q",i="browserWindowHeader_jXSR",l="buttons_uHc7",c="browserWindowAddressBar_Pd8y",p="dot_giz1",u="browserWindowMenuIcon_Vhuh",d="bar_rrRL",m="browserWindowBody_Idgs";const E=function(e){let{children:n,minHeight:t,url:r}=e;return o.createElement("div",{className:s,style:{minHeight:t}},o.createElement("div",{className:i},o.createElement("div",{className:l},o.createElement("span",{className:p,style:{background:"#f25f58"}}),o.createElement("span",{className:p,style:{background:"#fbbe3c"}}),o.createElement("span",{className:p,style:{background:"#58cb42"}})),o.createElement("div",{className:c},r),o.createElement("div",{className:u},o.createElement("div",null,o.createElement("span",{className:d}),o.createElement("span",{className:d}),o.createElement("span",{className:d})))),o.createElement("div",{className:m},n))};var _=t(7477),S=t(2949);const I=()=>{const{colorMode:e}=(0,S.I)();return o.createElement("svg",{style:{width:"24px"},className:"margin-right--sm",width:"38",height:"38",viewBox:"0 0 38 38",xmlns:"http://www.w3.org/2000/svg",stroke:"dark"===e?"#fff":"#3880ff"},o.createElement("g",{fill:"none",fillRule:"evenodd"},o.createElement("g",{transform:"translate(1 1)",strokeWidth:"2"},o.createElement("circle",{strokeOpacity:".5",cx:"18",cy:"18",r:"18"}),o.createElement("path",{d:"M36 18c0-9.94-8.06-18-18-18"},o.createElement("animateTransform",{attributeName:"transform",type:"rotate",from:"0 18 18",to:"360 18 18",dur:"1s",repeatCount:"indefinite"})))))};var f=t(6420),T=t(920);const O=e=>{let{code:n}=e;const[t,a]=(0,o.useState)(n.props.children.props.children),[s,i]=(0,o.useState)(T.T.INIT),[l,c]=(0,o.useState)(""),[p,u]=(0,o.useState)(!0),d=async()=>{c(""),i(T.T.INIT)},m={width:800,height:18*(1+t.split("\n").length)};return o.createElement(o.Fragment,null,p?n:o.createElement(_.Z,(0,r.Z)({},m,{language:"typescript",value:t,onChange:e=>{a(e)},options:{scrollBeyondLastLine:!1,minimap:{enabled:!1},wordWrap:"on"}})),o.createElement("button",{className:"button button--secondary margin-bottom--lg margin-right--xs",onClick:()=>{(async()=>{u(!p)})()}},p?"Edit Code":"Show Example"),o.createElement("button",{className:"button button--secondary margin-bottom--lg",onClick:()=>{(async()=>{(0,f.s)(t)})()}},"Copy Share URL"),o.createElement(E,{minHeight:"",url:"https://example.com"},o.createElement("button",{className:"button button--primary margin-right--xs",onClick:()=>{(async()=>{s!==T.T.STARTED&&(await d(),i(T.T.STARTED),setTimeout((async()=>{await(0,f.M)(t,c),i(T.T.ENDED)}),10))})()}},"Run Code"),o.createElement("button",{className:"button button--secondary",onClick:()=>{d()}},"Clear Output"),s!==T.T.INIT?o.createElement(o.Fragment,null,o.createElement("h4",{className:"margin-vert--md"},"Output"),o.createElement("pre",null,o.createElement("span",{className:"d-align-items--center"},s===T.T.STARTED?o.createElement(o.Fragment,null,o.createElement(I,null)):"",l||s===T.T.ENDED?l:"Waiting for output..."))):""))},N=e=>o.createElement(O,{code:e.children}),g={title:"Introduction",slug:"/developers/introduction"},h="Developers",y={unversionedId:"developers/introduction",id:"developers/introduction",title:"Introduction",description:"Developers define a Script that is part of an Acurast Job. This Script defines in code e.g., what API is being called for the price of an asset, if certificate pinning is being done, calculations relevant to the use case. The Acurast Job and its associated Script is being run by Data Transmitter in the Acurast Trusted Execution Environment which yields not only the output of the Script but also makes it verifiable.",source:"@site/docs/developers/introduction.mdx",sourceDirName:"developers",slug:"/developers/introduction",permalink:"/developers/introduction",draft:!1,editUrl:"https://github.com/acurast/acurast-docs/docs/developers/introduction.mdx",tags:[],version:"current",frontMatter:{title:"Introduction",slug:"/developers/introduction"},sidebar:"docs",previous:{title:"Introduction",permalink:"/"},next:{title:"How To Get Started",permalink:"/developers/get-started"}},C={},b=[{value:"Examples",id:"examples",level:2},{value:"HTTPS GET Request",id:"https-get-request",level:3},{value:"Verifiable Randomness",id:"verifiable-randomness",level:3},{value:"Complete Example",id:"complete-example",level:3}],A={toc:b};function D(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},A,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"developers"},"Developers"),(0,a.kt)("p",null,"Developers define a Script that is part of an Acurast Job. This Script defines in code e.g., what API is being called for the price of an asset, if certificate pinning is being done, calculations relevant to the use case. The Acurast Job and its associated Script is being run by Data Transmitter in the ",(0,a.kt)("strong",{parentName:"p"},"Acurast Trusted Execution Environment")," which yields not only the output of the Script but also makes it verifiable."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"It's completely up to you as the developer to specify the needs for your specific use case.")),(0,a.kt)("p",null,"Read more on the steps on ",(0,a.kt)("a",{parentName:"p",href:"get-started"},"How To Get Started"),"."),(0,a.kt)("p",null,"You can use the ",(0,a.kt)("a",{parentName:"p",href:"/playground/"},"Playground")," to test your Script and simmulate the outputs."),(0,a.kt)("h2",{id:"examples"},"Examples"),(0,a.kt)("p",null,"We have gathered some examples that show some of the use cases."),(0,a.kt)("h3",{id:"https-get-request"},"HTTPS GET Request"),(0,a.kt)("p",null,"Request from an API with the result of an asset price."),(0,a.kt)(N,{mdxType:"RunnableCode"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'httpGET(\n  "https://api.binance.com/api/v3/ticker/price?symbol=BNBBTC",\n  {},\n  (response, certificate) => {\n    console.log("response", response);\n    const price = JSON.parse(response)["price"] * 10 ** 6;\n    console.log("price", price);\n    const payload = { price: price, timestamp: Date.now() / 1000 };\n    const packedPayload = pack(payload);\n    const signature = sign(payload);\n    httpPOST(\n      "https://oracle.free.beeceptor.com",\n      JSON.stringify({\n        signature: signature,\n        certificate: certificate,\n        payload: packedPayload,\n      }),\n      {},\n      (response, certificate) => {},\n      (errorMessage) => {}\n    );\n  },\n  (errorMessage) => {}\n);\n'))),(0,a.kt)("h3",{id:"verifiable-randomness"},"Verifiable Randomness"),(0,a.kt)("p",null,"Getting a randomized output from the Trusted Execution Environment."),(0,a.kt)(N,{mdxType:"RunnableCode"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"return fulfill(generateSecureRandomHex());\n"))),(0,a.kt)("h3",{id:"complete-example"},"Complete Example"),(0,a.kt)("p",null,"This is a complete example that includes multiple price points and calculations."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Fetches prices for multiple assets from multiple endpoints"),(0,a.kt)("li",{parentName:"ul"},"Does certificate pinning to ensure that the data is coming from the instructed sources"),(0,a.kt)("li",{parentName:"ul"},"Calculations for an index with multiple assets"),(0,a.kt)("li",{parentName:"ul"},"Calculations for the median"),(0,a.kt)("li",{parentName:"ul"},"Defines a minimal amount of sources")),(0,a.kt)(N,{mdxType:"RunnableCode"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'const INTERVAL = 900 * 1000;\n\nconst MINIMUM_SOURCES_PER_PRICE = 2;\n\nconst PREVIOUS_EPOCH_START_MILLIS =\n  (Math.floor(Date.now() / INTERVAL) - 1) * INTERVAL;\nconst PREVIOUS_EPOCH_END_MILLIS =\n  Math.floor(Date.now() / INTERVAL) * INTERVAL - 1;\nconst PREVIOUS_EPOCH_START_SECONDS = Math.floor(\n  PREVIOUS_EPOCH_START_MILLIS / 1000\n);\nconst PREVIOUS_EPOCH_END_SECONDS = Math.floor(PREVIOUS_EPOCH_END_MILLIS / 1000);\n\nconst PREVIOUS_EPOCH_START_ISO = new Date(\n  PREVIOUS_EPOCH_START_MILLIS\n).toISOString();\nconst PREVIOUS_EPOCH_END_ISO = new Date(\n  PREVIOUS_EPOCH_END_MILLIS\n).toISOString();\n\n// for index to USDT\nconst BINANCE_SYMBOLS = [\n  "UNIUSDT",\n  "CAKEUSDT",\n  "LUNAUSDT",\n  "LINKUSDT",\n  "AAVEUSDT",\n];\nconst KUCOIN_SYMBOLS = [\n  "UNI-USDT",\n  "CAKE-USDT",\n  "LUNA-USDT",\n  "LINK-USDT",\n  "AAVE-USDT",\n];\nconst GATEIO_SYMBOLS = [\n  "UNI_USDT",\n  "CAKE_USDT",\n  "LUNA_USDT",\n  "LINK_USDT",\n  "AAVE_USDT",\n];\n\n// for USDT<>USD\nconst COINBASE_SYMBOLS = ["BTC-USD", "XTZ-USD", "USDT-USD"];\nconst BITFINEX_SYMBOLS = ["BTCUSD", "XTZUSD", "USTUSD"];\nconst BINANCE_US_SYMBOLS = ["BTCUSD", "XTZUSD", "USDTUSD"];\n\nconst PRICE_PRECISION = 10 ** 6;\n\n// for index to USDT\nconst BINANCE_TEMPLATE = `https://api.binance.com/api/v3/klines?symbol=<<SYMBOL>>&interval=15m&startTime=${PREVIOUS_EPOCH_START_MILLIS}&endTime=${PREVIOUS_EPOCH_END_MILLIS}`;\nconst KUCOIN_TEMPLATE = `https://api.kucoin.com/api/v1/market/candles?symbol=<<SYMBOL>>&type=15min&startAt=${PREVIOUS_EPOCH_START_SECONDS}&endAt=${PREVIOUS_EPOCH_END_SECONDS}`;\nconst GATE_IO_TEMPLATE = `https://api.gateio.ws/api/v4/spot/candlesticks/?currency_pair=<<SYMBOL>>&interval=15m&from=${PREVIOUS_EPOCH_START_SECONDS}&to=${PREVIOUS_EPOCH_END_SECONDS}`;\n\n// for USDT<>USD\nconst BINANCE_US_TEMPLATE = `https://api.binance.us/api/v3/klines?symbol=<<SYMBOL>>&interval=15m&startTime=${PREVIOUS_EPOCH_START_MILLIS}&endTime=${PREVIOUS_EPOCH_END_MILLIS}`;\nconst COINBASE_TEMPLATE = `https://api.pro.coinbase.com/products/<<SYMBOL>>/candles?granularity=900&start=${PREVIOUS_EPOCH_START_ISO}&end=${PREVIOUS_EPOCH_END_ISO}`;\nconst BITFINEX_TEMPLATE = `https://api-pub.bitfinex.com/v2/candles/trade:15m:t<<SYMBOL>>/hist?start=${PREVIOUS_EPOCH_START_MILLIS}&end=${PREVIOUS_EPOCH_END_MILLIS}`;\n\nconst BINANCE_CONFIG = {\n  url: BINANCE_TEMPLATE,\n  exchange_id: "BNN",\n  timestamp_factor: 1,\n  timestamp_index: 0,\n  close_index: 4,\n  certificate:\n    "0D:ED:57:7F:B9:1B:4C:8E:B2:36:50:10:4A:BA:08:FF:6C:86:77:75:4E:32:8D:02:09:E1:BE:F3:42:7B:BD:D4",\n};\nconst KUCOIN_CONFIG = {\n  url: KUCOIN_TEMPLATE,\n  exchange_id: "KUC",\n  timestamp_factor: 1000,\n  timestamp_index: 0,\n  close_index: 2,\n  certificate:\n    "A7:3F:12:F8:0A:A1:87:C0:97:86:B1:E1:0E:03:73:9C:3C:71:73:44:DA:32:C7:77:21:57:0F:48:5C:FC:18:6F",\n};\nconst GATE_IO_CONFIG = {\n  url: GATE_IO_TEMPLATE,\n  exchange_id: "GAT",\n  timestamp_factor: 1000,\n  timestamp_index: 0,\n  close_index: 2,\n  certificate:\n    "45:8B:33:B8:2F:54:69:32:7B:FB:0B:02:51:29:08:E6:6F:62:BA:2E:93:0A:F7:9E:CB:03:07:C2:E8:E9:DC:74",\n};\n\nconst BINANCE_US_CONFIG = {\n  url: BINANCE_US_TEMPLATE,\n  exchange_id: "BNU",\n  timestamp_factor: 1,\n  timestamp_index: 0,\n  close_index: 4,\n  certificate:\n    "9E:94:90:DB:57:6D:B8:17:A4:68:C4:30:9D:83:76:C1:49:04:26:C1:2E:55:93:9D:E0:92:A6:13:16:14:E0:FA",\n};\nconst COINBASE_CONFIG = {\n  url: COINBASE_TEMPLATE,\n  exchange_id: "CBP",\n  timestamp_factor: 1000,\n  timestamp_index: 0,\n  close_index: 4,\n  certificate:\n    "8B:70:72:2E:AE:DC:63:68:D9:EA:59:6F:B3:30:C1:E7:F8:5F:30:81:8D:7C:90:05:73:BC:64:04:61:D1:03:03",\n};\nconst BITFINEX_CONFIG = {\n  url: BITFINEX_TEMPLATE,\n  exchange_id: "BFX",\n  timestamp_factor: 1,\n  timestamp_index: 0,\n  close_index: 2,\n  certificate:\n    "57:E3:2B:C3:C5:AC:D8:86:E4:E4:25:9C:CB:A2:40:29:1F:07:7D:E1:61:21:2B:0F:B0:EC:8E:71:4A:82:C8:D1",\n};\n\nconst INITIAL_PRICES = {\n  AAVEUSD: 150.8,\n  CAKEUSD: 6.52,\n  LINKUSD: 14.76,\n  LUNAUSD: 94.46,\n  UNIUSD: 9.36,\n};\n\nconst WEIGHTS = {\n  AAVE: 0.0406,\n  CAKE: 0.0368,\n  LINK: 0.1335,\n  LUNA: 0.6654,\n  UNI: 0.1238,\n};\n\nconst LAST_REBALANCING_PRICE = 1.21617108;\n\nconst internalFetch = (config, symbols) => {\n  return symbols.map((symbol) => {\n    return new Promise((resolve, reject) => {\n      httpGET(\n        config.url.replace("<<SYMBOL>>", symbol),\n        {},\n        (rawResponse, certificate) => {\n          let response = JSON.parse(rawResponse);\n          if (config.exchange_id === "KUC") {\n            response = response["data"];\n          }\n\n          if (certificate === config.certificate) {\n            const payload = {\n              symbol: symbol\n                .replace("-", "")\n                .replace("_", "")\n                .replace("UST", "USDT"),\n              exchange_id: config.exchange_id,\n              timestamp:\n                response[0][config.timestamp_index] * config.timestamp_factor,\n              close: parseFloat(response[0][config.close_index]),\n              certificate: certificate,\n            };\n            resolve(payload);\n          } else {\n            reject("certificate does not match");\n          }\n        },\n        (errorMessage) => {\n          reject(errorMessage);\n        }\n      );\n    });\n  });\n};\n\nconst median = (values) => {\n  values.sort((a, b) => a - b);\n\n  if (values.length % 2 == 0) {\n    return (\n      (values[Math.floor(values.length / 2)] +\n        values[Math.floor(values.length / 2) - 1]) /\n      2.0\n    );\n  } else {\n    return values[Math.floor(values.length / 2)];\n  }\n};\n\nconst promises = [\n  ...internalFetch(BINANCE_CONFIG, BINANCE_SYMBOLS),\n  ...internalFetch(KUCOIN_CONFIG, KUCOIN_SYMBOLS),\n  ...internalFetch(GATE_IO_CONFIG, GATEIO_SYMBOLS),\n\n  ...internalFetch(BINANCE_US_CONFIG, BINANCE_US_SYMBOLS),\n  ...internalFetch(COINBASE_CONFIG, COINBASE_SYMBOLS),\n  ...internalFetch(BITFINEX_CONFIG, BITFINEX_SYMBOLS),\n];\n\nPromise.allSettled(promises).then((results) => {\n  const fulfilledPayloads = results\n    .filter((result) => result.status === "fulfilled")\n    .map((result) => result.value)\n    .filter((item) => item.timestamp === PREVIOUS_EPOCH_START_MILLIS);\n\n  const prices = fulfilledPayloads.reduce((previousValue, currentValue) => {\n    if (currentValue.symbol in previousValue) {\n      previousValue[currentValue.symbol].push(currentValue.close);\n    } else {\n      previousValue[currentValue.symbol] = [currentValue.close];\n    }\n    return previousValue;\n  }, {});\n\n  const indexPrice =\n    (LAST_REBALANCING_PRICE *\n      PRICE_PRECISION *\n      (WEIGHTS["UNI"] * (median(prices["UNIUSDT"]) / INITIAL_PRICES["UNIUSD"]) +\n        WEIGHTS["LINK"] *\n          (median(prices["LINKUSDT"]) / INITIAL_PRICES["LINKUSD"]) +\n        WEIGHTS["LUNA"] *\n          (median(prices["LUNAUSDT"]) / INITIAL_PRICES["LUNAUSD"]) +\n        WEIGHTS["CAKE"] *\n          (median(prices["CAKEUSDT"]) / INITIAL_PRICES["CAKEUSD"]) +\n        WEIGHTS["AAVE"] *\n          (median(prices["AAVEUSDT"]) / INITIAL_PRICES["AAVEUSD"]))) /\n    median(prices["USDTUSD"]);\n\n  const sources_count = Math.min(\n    ...Object.values(prices).map((values) => values.length)\n  );\n\n  if (sources_count >= MINIMUM_SOURCES_PER_PRICE) {\n    const oraclePayload = {\n      timestamp: PREVIOUS_EPOCH_START_SECONDS,\n      defi_price: Math.round(indexPrice),\n      xtz_price: Math.round(median(prices["XTZUSD"]) * PRICE_PRECISION),\n      btc_price: Math.round(median(prices["BTCUSD"]) * PRICE_PRECISION),\n    };\n    console.log(fulfill(oraclePayload));\n  }\n});\n'))))}D.isMDXComponent=!0},3411:e=>{function n(e){var n=new Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}n.keys=()=>[],n.resolve=n,n.id=3411,e.exports=n},2183:()=>{},3024:()=>{},2715:()=>{},3611:()=>{},8353:()=>{},1210:()=>{},3454:()=>{}}]);